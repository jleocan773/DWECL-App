{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/grid-list\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\n\nfunction ReadWriteDataComponent_mat_grid_tile_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-tile\")(1, \"mat-card\", 6)(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-title\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(7, \"img\", 7);\n    i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"h2\", 8);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"mat-card-actions\", 9)(12, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ReadWriteDataComponent_mat_grid_tile_10_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.incrementCounter(item_r1.payload.doc.data().name);\n    });\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14, \"add\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ReadWriteDataComponent_mat_grid_tile_10_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.remove(item_r1.payload.doc.data().name);\n    });\n    i0.ɵɵelementStart(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"remove\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Product: \", item_r1.payload.doc.data().name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Price: \", item_r1.payload.doc.data().price, \" \\u20AC\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", item_r1.payload.doc.data().img, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Quantity: \", item_r1.counter, \"\");\n  }\n}\n\nexport let ReadWriteDataComponent = /*#__PURE__*/(() => {\n  class ReadWriteDataComponent {\n    constructor(authService) {\n      this.price = 0;\n      this.name = '';\n      this.img = 'https://source.unsplash.com/random/500x500/?';\n      this.counter = 0;\n      this.auth = authService;\n      this.auth.dataRead().subscribe(res => this.products = res);\n    }\n\n    write() {\n      this.auth.writeData({\n        price: this.price,\n        name: this.name,\n        img: this.img + this.name\n      });\n    }\n\n    incrementCounter(productName) {\n      const product = this.products.find(p => p.payload.doc.data().name === productName);\n\n      if (product) {\n        product.counter++;\n      }\n    }\n\n    remove(productName) {\n      const product = this.products.find(p => p.payload.doc.data().name === productName);\n\n      if (product && product.counter > 0) {\n        product.counter--;\n      }\n    }\n\n    ngOnInit() {\n      this.auth.dataRead().subscribe(res => {\n        this.products = res.map(product => Object.assign(Object.assign({}, product), {\n          counter: 0\n        }));\n      });\n    }\n\n  }\n\n  ReadWriteDataComponent.ɵfac = function ReadWriteDataComponent_Factory(t) {\n    return new (t || ReadWriteDataComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n\n  ReadWriteDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReadWriteDataComponent,\n    selectors: [[\"app-read-write-data\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[1, \"productsControls\"], [\"type\", \"string\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"cols\", \"2\", \"gutterSize\", \"10px\"], [4, \"ngFor\", \"ngForOf\"], [1, \"producto\"], [\"mat-card-image\", \"\", \"alt\", \"Imagen Producto\", 3, \"src\"], [1, \"counter\"], [1, \"action_buttons\"], [\"mat-icon-button\", \"\", 3, \"click\"]],\n    template: function ReadWriteDataComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function ReadWriteDataComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \"Precio:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ReadWriteDataComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.price = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function ReadWriteDataComponent_Template_button_click_7_listener() {\n          return ctx.write();\n        });\n        i0.ɵɵtext(8, \"Add\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-grid-list\", 4);\n        i0.ɵɵtemplate(10, ReadWriteDataComponent_mat_grid_tile_10_Template, 18, 4, \"mat-grid-tile\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.price);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.products);\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i2.NumberValueAccessor, i3.MatGridList, i4.NgForOf, i3.MatGridTile, i5.MatCard, i5.MatCardHeader, i5.MatCardTitle, i5.MatCardImage, i5.MatCardContent, i5.MatCardActions, i6.MatButton, i7.MatIcon],\n    styles: [\".productsControls[_ngcontent-%COMP%]{margin:25px}.counter[_ngcontent-%COMP%]{text-align:center}.action_buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:10px}mat-card-header[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:10px}\"]\n  });\n  return ReadWriteDataComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}